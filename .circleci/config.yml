version: 2
jobs:
  build:
    machine: true
    steps:
      - checkout
      - restore_cache:
         keys:
          - docker- {{ .Branch }}--{{ checksum "./circleci/config.yml" }}--{{ checksum "docker-compose.yml" }}
         paths:
          - ~/caches/images.tar
      - run:
         command: |
          if [ ! -f ~/caches/images.tar ]; then
            docker-compose pull
            docker-compose build
            mkdir -p ~/caches
            docker save $(docker images | awk 'NR>=2 && ! /^<none>/{print $1}') -o ~/caches/images.tar
          fi
      - save_cache:
         key:
          - docker--{{ .Branch }}--{{ checksum ".circleci/config.yml" }}--{{ checksum "docker-compose.yml" }}
         paths:
          - ~/caches/images.tar
      - run:
         command: |
           if [[ -e ~/caches/images.tar ]];then
            docker load -i ~/caches/images.tar
           else
            docker-compose up -d
           fi
      - run: cd ./src/backend-app && cp .env.example .env
      - run: docker exec -it rubel_php /bin/sh -c "cd backend-app/ && composer install"
      - run: docker exec -it rubel_php /bin/sh -c "cd backend-app/ && npm cache verify && npm install && npm run build"
      - run: docker exec -it rubel_php /bin/sh -c "cd frontend-app/ && npm cache verify && npm install && npm run build"
      - run: docker exec -it rubel_php /bin/sh -c "cd backend-app/ && php artisan key:generate"
      - run: docker exec -it rubel_php /bin/sh -c "cd backend-app/ && php artisan migrate && php artisan db:seed"
      - run: docker exec -it rubel_php /bin/sh -c "cd backend-app/ && composer test"
